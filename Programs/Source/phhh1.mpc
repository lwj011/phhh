program.use_edabit(True)
program.use_trunc_pr = True
program.use_split(3)
from Compiler import types,library, instructions
from Compiler.types import Array, sint, cint
from Compiler.phhh1 import phhh_1, phhh_2, phhh_0, generate_zipf_distribution, test_phhh1_frequency, test_phhh0_frequency
from Compiler.GC.types import sbitvec
from Compiler.instructions import time, crash
from  Compiler.sorting import radix_sort

#this is the test file of private hierarchical heavy hittters, including basicHHH, PHHH-1, PHHH-2.



n_bits = 64   #layers
num = 100000      #data number
t = sint(10)   #threshold

zipf_data = generate_zipf_distribution(n_bits, num, 1.03)
a = sint.Array(num)
a.assign(zipf_data)
#phhh_0(a,n_bits,t)
#phhh_1(a,n_bits,t)
phhh_2(a, n_bits, t)
#test_phhh0_frequency(a, n_bits)
#test_phhh1_frequency(a, n_bits)
print_ln('----- testing end -----')








