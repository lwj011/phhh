Using security parameter 40
Trying to run 64-bit computation
-------------------------basic accuracy testing starts------------------------------------
the input data is:
[6, 1, 5, 4, 7, 7, 7, 0, 5, 2, 4, 4, 5, 0, 2, 4, 6]
Starting timer 20 at 0 (0 MB, 0 rounds) after 1.0557e-05
Starting timer 201 at 0 (0 MB, 0 rounds) after 2.975e-06
Stopped timer 201 at 0.290509 (8.00586 MB, 87 rounds)
[1, 0, 0];[1, 0, 1];[1, 1, 1];[0, 0, 2];Stopped timer 20 at 0.375951 (8.01392 MB, 204 rounds)
-----basic testing end, 3 layers, 17 items, time30 phhh0, time10 phhh1, time20 phhh2-----
-------------------------big layers accuracy testing starts------------------------------------
the input data is:
[60000, 12345, 50001, 41011, 71, 71, 71, 0, 50001, 27777, 41011, 41011, 50001, 0, 27777, 41011, 60000]
Starting timer 20 at 0.375951 (8.01392 MB, 204 rounds) after 0.000710614
Starting timer 201 at 0.290509 (8.00586 MB, 87 rounds) after 0.0861483
Stopped timer 201 at 0.384464 (8.03407 MB, 472 rounds)
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1];[1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1];[1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1];[0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];Stopped timer 20 at 0.586851 (8.07177 MB, 955 rounds)
-----layers testing end, 16 layers, 17 items-----
-------------------------no hhh accuracy testing starts------------------------------------
the input data is:
[6, 1, 2, 4, 7]
-----no hhh testing end-----
-------------------------random accuracy testing starts------------------------------------
-----random testing end-----
Compiler: ./compile.py -I -R 64 -C phhh2.mpc
	998752 dabits of replicated Z2^64 left
Significant amount of unused dabits of replicated Z2^64 distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
Spent 0.32023 seconds (0.072064 MB, 955 rounds) on the online phase and 0.269424 seconds (8.00002 MB, 3 rounds) on the preprocessing/offline phase.
Communication details (rounds in parallel threads counted double):
Passing around 8.05808 MB in 588 rounds, taking 0.252195 seconds
Receiving directly 0.014 MB in 185 rounds, taking 0.0690548 seconds
Sending directly 0.014 MB in 185 rounds, taking 0.0118545 seconds
CPU time = 0.319562
The following benchmarks are including preprocessing (offline phase).
Time = 0.594456 seconds 
Time20 = 0.586851 seconds (8.07177 MB, 955 rounds)
Time201 = 0.384464 seconds (8.03407 MB, 472 rounds)
Data sent = 8.07208 MB in ~958 rounds (party 1 only)
Global data sent = 24.2162 MB (all parties)
Actual cost of program:
  Type int
          1248         daBits
Command line: ./replicated-ring-party.x -I -p 1 -v phhh2 --batch-size 1000000
